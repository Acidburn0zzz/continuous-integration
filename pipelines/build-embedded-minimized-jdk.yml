steps:
  - command: |-
      bazel --nomaster_bazelrc --bazelrc=/dev/null version
      bazel build //src:embedded_jdk_minimal //src:embedded_jdk_allmodules
      buildkite-agent artifact upload "./bazel-genfiles/src/*_jdk.tar.gz"
      gsutil cp ./bazel-genfiles/src/minimal_jdk.tar.gz gs://bazel-mirror/openjdk/azul-zulu11.29.3-ca-jdk11.0.2/zulu11.29.3-ca-jdk11.0.2-linux_x64-minimal-$(git rev-parse HEAD)-$(date +%s).tar.gz
      gsutil cp ./bazel-genfiles/src/allmodules_jdk.tar.gz gs://bazel-mirror/openjdk/azul-zulu11.29.3-ca-jdk11.0.2/zulu11.29.3-ca-jdk11.0.2-linux_x64-allmodules-$(git rev-parse HEAD)-$(date +%s).tar.gz
    label: ":ubuntu:"
    agents:
      - "queue=default"
    plugins:
      philwo/docker:
        always-pull: true
        debug: true
        environment: [BUILDKITE_ARTIFACT_UPLOAD_DESTINATION, BUILDKITE_GS_ACL]
        image: gcr.io/bazel-public/ubuntu1804:java8
        network: host
        privileged: true
        propagate-environment: true
        volumes:
          - ".:/workdir"
          - "/var/lib/buildkite-agent/builds:/var/lib/buildkite-agent/builds"
          - "/var/lib/bazelbuild:/var/lib/bazelbuild:ro"
        workdir: "/workdir"

  - command: "powershell -Command \"bazel --nomaster_bazelrc --bazelrc=NUL version ; if (\\$LastExitCode -ne 0) { exit 1 } ; bazel build //src:embedded_jdk_minimal //src:embedded_jdk_allmodules ; if (\\$LastExitCode -ne 0) { exit 1 } ; buildkite-agent artifact upload ./bazel-genfiles/src/minimal_jdk.zip ; if (\\$LastExitCode -ne 0) { exit 1 } ; buildkite-agent artifact upload ./bazel-genfiles/src/allmodules_jdk.zip ; if (\\$LastExitCode -ne 0) { exit 1 } ; \\$revision=(git rev-parse HEAD) ; if (\\$LastExitCode -ne 0) { exit 1 } ; \\$epoch=(date +%%s) ; if (\\$LastExitCode -ne 0) { exit 1 } ; gsutil cp ./bazel-genfiles/src/minimal_jdk.zip gs://bazel-mirror/openjdk/azul-zulu11.29.3-ca-jdk11.0.2/zulu11.29.3-ca-jdk11.0.2-win_x64-minimal-\\${revision}-\\${epoch}.zip ; if (\\$LastExitCode -ne 0) { exit 1 } ; gsutil cp ./bazel-genfiles/src/allmodules_jdk.zip gs://bazel-mirror/openjdk/azul-zulu11.29.3-ca-jdk11.0.2/zulu11.29.3-ca-jdk11.0.2-win_x64-allmodules-\\${revision}-\\${epoch}.zip ; if (\\$LastExitCode -ne 0) { exit 1 } ;\""
    label: ":windows:"
    agents:
      - "queue=windows"

  - command: |-
      bazel --nomaster_bazelrc --bazelrc=/dev/null version
      bazel build //src:embedded_jdk_minimal //src:embedded_jdk_allmodules
      buildkite-agent artifact upload "./bazel-genfiles/src/*_jdk.tar.gz"
      gsutil cp ./bazel-genfiles/src/minimal_jdk.tar.gz gs://bazel-mirror/openjdk/azul-zulu11.29.3-ca-jdk11.0.2/zulu11.29.3-ca-jdk11.0.2-macosx_x64-minimal-$(git rev-parse HEAD)-$(date +%s).tar.gz
      gsutil cp ./bazel-genfiles/src/allmodules_jdk.tar.gz gs://bazel-mirror/openjdk/azul-zulu11.29.3-ca-jdk11.0.2/zulu11.29.3-ca-jdk11.0.2-macosx_x64-allmodules-$(git rev-parse HEAD)-$(date +%s).tar.gz
    label: ":darwin:"
    agents:
      - "queue=macos"
